# Authorization Plugins(Beta)

## Introduction

GoCD currently supports password-file, LDAP and plugin based authentication.

In addition to authentication, GoCD offers authorization by restricting certain operations to specific users and groups of users ("roles").

Without the use of authorization plugins, roles can only be managed through GoCD and it does not provide an ability to use roles defined in systems used for authentication (for example in LDAP groups). With this limitation, administrators need to configure roles in multiples places.

The introduction of the authorization plugin endpoint (Beta) allows GoCD to delegate both authentication and authorization of users to plugins. The plugins will have the flexibility to use any identity service providers like LDAP, Google, GitHub etc.

If you're looking to start away with a basic template for authorization plugins, we recommend forking this [Github repository](https://github.com/gocd-contrib/authorization-skeleton-plugin).

## Configuring Authorization Plugins

Authorization Plugins need two types of configuration, [`<authConfig/>`](#authorization-configuration) and [`<pluginRole/>`](#plugin-role-configuration).

### Authorization Configuration

> An example authorization configuration

```xml
<authConfigs>
  <authConfig id="ldap" pluginId="cd.go.authorization.ldap">
    <property>
      <key>Url</key>
      <value>ldap://ldap.server.url:10389</value>
    </property>
    <property>
      <key>ManagerDN</key>
      <value>uid=admin,ou=system</value>
    </property>
    <property>
      <key>SearchBase</key>
      <value>ou=users,ou=system</value>
    </property>
    <property>
      <key>Password</key>
      <value>secret</value>
    </property>
    <property>
      <key>SearchFilter</key>
      <value>uid</value>
    </property>
    <property>
      <key>DisplayNameAttribute</key>
      <value>displayName</value>
    </property>
  </authConfig>
</authConfigs>
```

Authorization configuration will usually allow administrators to configure  the connection settings for your authorization plugin, and may include configuration like URLs, and credentials, among others.

GoCD administrators could provide multiple authorization configurations to connect with multiple identity providers.

### Plugin Role Configuration

> An example plugin role configuration

```xml
<pluginRole name="spacetiger" authConfigId="ldap">
  <property>
    <key>memberOf</key>
    <value>ou=spacetiger,ou=example,ou=com</value>
  </property>
</pluginRole>
```

This is used to define roles in GoCD, unlike the current roles which contains a list of users pluginRole provides configuration to map a GoCD role to a role defined in an external identity service. e.g pluginRole can be used to define mappings between LDAP group and GoCD roles.

<%= partial 'includes/shared/plugin-structure.md.erb', locals: { plugin_class: 'LdapAuthorizationPlugin', plugin_type: 'authorization', minimum_version: '17.2.0', endpoint_version: '1.0' } %>
